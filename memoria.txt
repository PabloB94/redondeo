
----------------------
INTEGRANTES DEL GRUPO:
----------------------

- Mario Luengo Gonzalez - w140280
- Sergio Santos Gonzalez - w140180
- Pablo Beltran de Casso - Y160454

------------------------------------
CODIGO DE LA PRACTICA (EJERCICIO 1):
------------------------------------



-------------------------------------
PRUEBAS DE LA PRACTICA (EJERCICIO 1):
-------------------------------------

---------------------
---------------------
Redondeo a la unidad:
---------------------
---------------------

Numero 5.3 -> 5:
----------------

?- redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(0)))],redondeoUnidad,redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(s(0)))))],[s(s(s(0)))]),numeroRedondeado(',',[s(s(s(s(s(0)))))],[]))).

yes

Numero 5.67 -> 6:
-----------------

?- redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(s(s(s(0)))))),s(s(s(s(s(s(s(0)))))))], redondeoUnidad, redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(s(0)))))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(s(s(0)))))))]),numeroRedondeado(',',[s(s(s(s(s(s(0))))))],[]))).

yes

Numero 412.535 -> 413:
----------------------

?- redondearDecimal([s(s(s(s(0)))),s(0),s(s(0)),',',s(s(s(s(s(0))))),s(s(s(0))),s(s(s(s(s(0)))))], redondeoUnidad, redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(s(0))))),s(s(s(0))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(s(s(s(0)))),s(0),s(s(s(0)))],[]))).

yes

Numero 412.21 -> 412:
---------------------

?- redondearDecimal([s(s(s(s(0)))),s(0),s(s(0)),',',s(s(0)),s(0)], redondeoUnidad, redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(0)),s(0)]),numeroRedondeado(',',[s(s(s(s(0)))),s(0),s(s(0))],[]))).

yes

Numero 412.445 -> 412:
----------------------

?- redondearDecimal([s(s(s(s(0)))),s(0),s(s(0)),',',s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))], redondeoUnidad, redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(s(s(s(0)))),s(0),s(s(0))],[]))).

yes

Numero 123.612 -> 124:
----------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(0),s(s(0))], redondeoUnidad, redondeo(redondeoUnidad,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(0),s(s(0))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(s(0))))],[]))).

yes

---------------------
---------------------
Redondeo a la decima:
---------------------
---------------------

Numero 412.535 -> 412.5:
------------------------

?- redondearDecimal([s(s(s(s(0)))),s(0),s(s(0)),',',s(s(s(s(s(0))))),s(s(s(0))),s(s(s(s(s(0)))))], redondeoDecima, redondeo(redondeoDecima,numeroOriginal(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(s(0))))),s(s(s(0))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(s(0)))))]))).

yes

Numero 123.612 -> 123.6:
------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(0),s(s(0))], redondeoDecima, redondeo(redondeoDecima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(0),s(s(0))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0))))))]))).

yes

Numero 412.445 -> 412.4:
------------------------

?- redondearDecimal([s(s(s(s(0)))),s(0),s(s(0)),',',s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))], redondeoDecima, redondeo(redondeoDecima,numeroOriginal(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(s(s(s(0)))),s(0),s(s(0))],[s(s(s(s(0))))]))).

yes

Numero 123.653 -> 123.7:
------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(0)))], redondeoDecima, redondeo(redondeoDecima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(0)))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(s(0)))))))]))).

yes

------------------------
------------------------
Redondeo a la centesima:
------------------------
------------------------

Numero 123.612 -> 123.61:
-------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(0),s(s(0))], redondeoCentesima, redondeo(redondeoCentesima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(0),s(s(0))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(0)]))).

yes

Numero 123.654 -> 123.65:
-------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(s(0))))], redondeoCentesima, redondeo(redondeoCentesima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(s(0))))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(0)))))]))).

yes

Numero 123.655 -> 123.66:
-------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(s(s(0)))))], redondeoCentesima, redondeo(redondeoCentesima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(0))))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(s(s(0)))))),s(s(s(s(s(s(0))))))]))).

yes

Numero 123.445 -> 123.45:
-------------------------

?- redondearDecimal([s(0),s(s(0)),s(s(s(0))),',',s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))], redondeoCentesima, redondeo(redondeoCentesima,numeroOriginal(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(0)))),s(s(s(s(0)))),s(s(s(s(s(0)))))]),numeroRedondeado(',',[s(0),s(s(0)),s(s(s(0)))],[s(s(s(s(0)))),s(s(s(s(s(0)))))]))).

yes

-------------------
-------------------
Pruebas con acarreo
-------------------
-------------------

Numero 9.99 -> 10:
-------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoDecima,redondeo(redondeoDecima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0],[]))).

yes

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoUnidad,redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0],[]))).

yes

Numero 99.99 -> 100:
--------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoUnidad,redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0],[]))).

yes

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoDecima,redondeo(redondeoDecima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0],[]))).

yes

Numero 999.99 -> 1000:
----------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoUnidad,redondeo(redondeoUnidad,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0,0],[]))).

yes

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoDecima,redondeo(redondeoDecima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0,0],[]))).

yes

Numero 9.999 -> 10:
-------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoCentesima,redondeo(redondeoCentesima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0],[]))).

yes

Numero 99.999 -> 100:
---------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoCentesima,redondeo(redondeoCentesima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0],[]))).

yes

Numero 999.999 -> 1000:
-----------------------

?- redondearDecimal([s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),',',s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],redondeoCentesima,redondeo(redondeoCentesima,numeroOriginal(',',[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))],[s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0))))))))),s(s(s(s(s(s(s(s(s(0)))))))))]),numeroRedondeado(',',[s(0),0,0,0],[]))).

yes

------------------------------------
CODIGO DE LA PRACTICA (EJERCICIO 2):
------------------------------------



-------------------------------------
PRUEBAS DE LA PRACTICA (EJERCICIO 2):
-------------------------------------

?- esCuadradoFantasticoSecreto([[s(s(0)),s(s(s(s(0)))),s(s(s(s(s(s(0))))))], [ s(s(s(s(0)))),s(s(s(s(s(s(0)))))),s(s(0))], [s(s(s(s(s(s(0)))))),s(s(0)),s(s(s(s(0))))]],s(s(s(s(s(s(0))))))).
Yes

------------
COMENTARIOS:
------------

En el ejercicio 1 debido a un error de interpretacion del enunciado, en el tercer parametro aceptamos un numero en formato de peano como el numero original, en vez de la estructura redondeo/3.
Debido a que nos hemos dado cuenta en el ultimo momento, no hemos tenido tiempo de adaptar el codigo a este cambio.

A continuacion incluimos el codigo original que desarrollamos, antes de darnos cuenta del error. Este codigo funciona siempre y cuando el tercer argumento sea un numero en el mismo formato que el numero inicial:

nat(0).           % Cero es un numero natural
nat(s(N)) :-      % El sucesor de un numero natural es un numero natural
	nat(N).

equals(0,0).      % Functor para evaluar si dos elementos son iguales
equals(s(X),s(Y)) :-
	equals(X,Y).

ls_or_equal(0,X) :- nat(X).      % Functor que evalua si un numero es menor o igual que el otro
ls_or_equal(s(X),s(Y)) :-
	ls_or_equal(X,Y).

gt_or_equal(X,0) :- nat(X).      % Functor que evalua si un numero es mayor o igual que el otro
gt_or_equal(s(X),s(Y)) :-
	gt_or_equal(X,Y).

first([H|_],H).         % El primer elemento de una lista es la cabeza de la lista

last([X],X).            % Functor que devuelve el ultimo elemento de una lista
last([_|Z],X) :-
	last(Z,X).

borraUltimoElem([X|Xs], Ys) :-         % Functor que borra el ultimo elem de una lista
	borraUltElemAux(Xs, Ys, X).

borraUltElemAux([], [], _).
borraUltElemAux([X1|Xs], [X0|Ys], X0) :-
	borraUltElemAux(Xs, Ys, X1).

sum(0, X, X).               % Suma 1 en representacion peano al numero a redondear
sum(s(X), s(0), s(Z)) :-
	sum(X, s(0), Z).

append([],X,X).             % Concatenacion de listas
append([X|Y], Z, [X|W]) :-
	append(Y, Z, W).

reverse([],[]).             % Invierte una lista
reverse([X|Xs],Ys) :-
	reverse(Xs,Zs),
	append(Zs,[X],Ys).

count([],0).                % Contador del numero de digitos a cada uno de los lados de la coma
count([_|T], N) :-
	count(T, N1),
	sum(N1, s(0), N).

extComa([','|B],[],B).      % Functor que divide el numero dado en parte entera y parte decimal
extComa([A|As],[A|B],C) :-
	extComa(As,B,C).

% Intento de resolver el problema del acarreo
%eval9D(X) :- last(X, S),
%	equals(S,s(s(s(s(s(s(s(s(s(0)))))))))),
%	borraUltimoElem(X,L),
%	eval9D(L).

%eval9E(X) :- reverse(X,Xs),
%	first(Xs,S),
%	equals(S,s(s(s(s(s(s(s(s(s(0)))))))))),
%	borraUltimoElem(S,Y),
%	append(Y,[0],Z)
%	eval9E(Z).

% Functores ppales del programa
redondearDecimal(NI, redondeoUnidad, NF) :-
	redU(NI, NF).
redondearDecimal(NI, redondeoDecima, NF) :-
	redD(NI, NF).
redondearDecimal(NI, redondeoCentesima, NF) :-
	redC(NI, NF).

% Elegir tipo de redondeo en funcion del numero de digitos en la parte decimal
redU(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C,s(0)),
	compU(NI,NF).

redU(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C, s(s(0))),
	compD(NI,A),
	redU(A,NF).

redU(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C, s(s(s(0)))),
	compC(NI,A),
	redU(A,NF).

redD(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C, s(s(0))),
	compD(NI,NF).

redD(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C, s(s(s(0)))),
	compC(NI,A),
	redD(A,NF).

redC(NI,NF) :-
	extComa(NI,_,D),
	count(D,C),
	equals(C, s(s(s(0)))),
	compC(NI,NF).

% Functores que realizan el redondeo a la unidad
compU(NI,NF) :-
	extComa(NI,NF,D),
	last(D, S),
	ls_or_equal(S, s(s(s(s(0))))).

compU(NI,NF) :-
	extComa(NI,E,D),
	last(D, S),
	gt_or_equal(S, s(s(s(s(s(0)))))),
	reverse(E,R),
	first(R,X),
	sum(X, s(0), F),
	reverse(R,R2),
	borraUltimoElem(R2,R3),
	append(R3,[F],NF).

% Functores que realizan el redondeo a la decima
compD(NI,NF) :-
	extComa(NI,_,D),
	last(D,S),
	ls_or_equal(S, s(s(s(s(0))))),
	borraUltimoElem(NI,NF).

compD(NI,NF) :-
	extComa(NI,_,D),
	last(D,S),
	gt_or_equal(S, s(s(s(s(s(0)))))),
	borraUltimoElem(NI,X),
	last(X,S0),
	sum(S0,s(0),C2),
	borraUltimoElem(X, X2),
	append(X2,[C2],NF).

% Functores que realizan el redondeo a la centesima
compC(NI,NF) :-
	extComa(NI,_,D),
	last(D,S),
	ls_or_equal(S, s(s(s(s(0))))),
	borraUltimoElem(NI, NF).

compC(NI,NF) :-
	extComa(NI,_,D),
	last(D,S),
	gt_or_equal(S, s(s(s(s(s(0)))))),
	borraUltimoElem(NI, X),
	last(X,S0),
	sum(S0,s(0),C2),
	borraUltimoElem(X, X2),
	append(X2,[C2],NF).

	PRUEBAS DE LA PRACTICA (EJERCICIO 1):

	?- redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(0)))], redondeoUnidad,NF).
	NF = [s(s(s(s(s(0)))))] ?

	?- redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(s(s(s(0))))))], redondeoUnidad,NF).
	NF = [s(s(s(s(s(s(0))))))] ?

	?-  redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(s(s(s(0)))))),s(s(s(s(s(s(0))))))], redondeoDecima,NF).
	NF = [s(s(s(s(s(0))))),',',s(s(s(s(s(s(s(0)))))))

	?- redondearDecimal([s(s(s(s(s(0))))),',',s(s(s(s(s(s(0)))))),s(0)], redondeoDecima,NF).
	NF = [s(s(s(s(s(0))))),',',s(s(s(s(s(s(0))))))

	?- redondearDecimal([s(s(0)),s(0),',',s(s(0)),s(s(s(0))),s(s(s(s(s(0)))))], redondeoCentesima,NF).
	NF = [s(s(0)),s(0),',',s(s(0)),s(s(s(s(0))))]

	?-  redondearDecimal([s(s(0)),s(0),',',s(s(0)),s(s(s(0))),s(s(0))], redondeoCentesima,NF).
	NF = [s(s(0)),s(0),',',s(s(0)),s(s(s(0)))]

Como referencia para proximas practicas, consideramos que el enunciado no es lo suficientemente claro.
